# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.name=grete-router
# TODO job.id needs to be unique per container when using checkpoints
job.id=1
job.coordinator.factory=org.apache.samza.zk.ZkJobCoordinatorFactory
# TODO zk.connect is the ZooKeeper cluster used by Samza
job.coordinator.zk.connect=zk-cs.samza-router.svc.cluster.local:2181

job.container.thread.pool.size=8

job.default.system=grete-default

# Task/Application
task.name.grouper.factory=org.apache.samza.container.grouper.task.GroupByContainerIdsFactory
#task.checkpoint.system=grete-kafka
#task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
#task.commit.ms=16384

# Kafka System
# TODO If checkpoins are to be enabled, a kafka cluster should be made available below, using the same ZooKeeper as Samza for service containment
#systems.grete-kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
#systems.grete-kafka.consumer.zookeeper.connect=localhost:2181/
#systems.grete-kafka.producer.bootstrap.servers=localhost:9091
#systems.grete-kafka.default.stream.replication.factor=1

# TODO zookeeper.connect and bootstrap.servers need to be changed to the respective origin/source cluster pointers
systems.src-kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.src-kafka.consumer.zookeeper.connect=zookeeper.kafka-source.svc.cluster.local:2181/
systems.src-kafka.producer.bootstrap.servers=broker.kafka-source.svc.cluster.local:9092
systems.src-kafka.default.stream.replication.factor=1

# TODO zookeeper.connect and bootstrap.server need to be changed to the respective replica/destination cluster pointers
systems.dest-kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.dest-kafka.consumer.zookeeper.connect=zookeeper.kafka-destination.svc.cluster.local:2181/
systems.dest-kafka.producer.bootstrap.servers=broker.kafka-destination.svc.cluster.local:9092
systems.dest-kafka.default.stream.replication.factor=1

streams.src-kafka.samza.system=src-kafka
streams.src-kafka.samza.physical.name=thc-test

streams.dest-kafka.samza.system=dest-kafka
streams.dest-kafka.samza.physical.name=thc-test
